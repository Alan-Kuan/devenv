#!/usr/bin/env bash

set -e

pkgname=cpython
pkgbranch=${VERSION:-main}
pkgfull=${pkgname}

trap 'get_pip $? $LINENO' ERR

get_pip() {
  echo "When failing to download pip, if you got warning messages like:"
  echo "    pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available."
  echo "You may need OpenSSL lib in your flavor. Build OpenSSL with devenv by:"
  echo "    $ devenv build openssl"
}

syncgit https://github.com/python ${pkgname} ${pkgbranch} ${pkgfull}

pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null

  # build
  PREFIX=${DEVENVPREFIX}
  ARCH=64

  if [ $(uname) == Darwin ]; then
    export CPPFLAGS="-I${PREFIX}/include ${CPPFLAGS}"
    export LDFLAGS="-Wl,-rpath,${PREFIX}/lib -L${PREFIX}/lib ${LDFLAGS}"
    sed -i -e "s/@OSX_ARCH@/${ARCH}/g" Lib/distutils/unixccompiler.py
  elif [ $(uname) == Linux ]; then
    export CPPFLAGS="-I${PREFIX}/include ${CPPFLAGS}"
    export LDFLAGS="-L${PREFIX}/lib -Wl,-rpath=${PREFIX}/lib,--no-as-needed"
  fi

  cfgcmd=("./configure")
  cfgcmd+=("--prefix=${PREFIX}")
  cfgcmd+=("--enable-shared")
  cfgcmd+=("--enable-ipv6")
  cfgcmd+=("--with-ensurepip=no")
  cfgcmd+=("--enable-optimizations")
  cfgcmd+=("--with-lto")
  cfgcmd+=("--with-tcltk-includes=-I${PREFIX}/include")
  cfgcmd+=("--with-tcltk-libs=\"-L${PREFIX}/lib -ltcl8.5 -ltk8.5\"")
  cfgcmd+=("--with-openssl=${DEVENVPREFIX}")

  if [[ $(uname) == Darwin ]] ; then
    cfgcmd+=("LLVM_AR=/usr/bin/ar")
  fi

  cfgcmd+=("--enable-loadable-sqlite-extensions")

  if [[ ${DEVENVFLAVOR} == dbg* ]] ; then
    cfgcmd+=("--with-pydebug")
  fi

  # build.
  buildcmd configure.log "${cfgcmd[@]}"
  buildcmd make.log make build_all -j ${NP}
  buildcmd install.log make install

  # check python version
  PY_BIN=${PREFIX}/bin/python3
  CURL_URL=https://bootstrap.pypa.io/get-pip.py

  IFS='.' read -ra VER <<< ${VERSION}

  if [[ ${VER[0]} == "v2" ]]; then
    PY_BIN=${PREFIX}/bin/python
    CURL_URL=https://bootstrap.pypa.io/pip/2.7/get-pip.py
  fi

  curl ${CURL_URL} | ${PY_BIN}
  rm -f ${PREFIX}/bin/pip

popd > /dev/null

# vim: set et nobomb ft=bash ff=unix fenc=utf8:
