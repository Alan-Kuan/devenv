#!/usr/bin/env bash

set -e

SRCSYNC=${SRCSYNC:-tarball}

pkgname=numpy

if [ "${SRCSYNC}" == "tarball" ] ; then

  pkgver=${VERSION:-1.24.1}
  pkgfull=${pkgname}-${pkgver}
  pkgfn=${pkgfull}.tar.gz
  pkgurl=https://github.com/${pkgname}/${pkgname}/releases/download/v${pkgver}/${pkgfn}

  download_md5 $pkgfn $pkgurl dd3aaeeada8e95cc2edf9a3a4aa8b5af

  mkdir -p ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src
  pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src > /dev/null
    tar xf ${DEVENVDLROOT}/$pkgfn
  popd > /dev/null

elif [ "${SRCSYNC}" == "git" ] ; then

  pkgbranch=${VERSION:-main}
  pkgfull=${pkgname}

  # unpack (clone)
  syncgit https://github.com/${pkgname} ${pkgname} ${pkgbranch} ${pkgfull}

  if [[ -f "${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull}/.gitmodules" ]] ; then
    pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null
    git submodule update --init
    popd > /dev/null
  fi
else

  display -e "Invalid \${SRCSYNC} ${SRCSYNC}"
  exit

fi

# build.

pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null

# prepare files for building.
if [ ! -e ${DEVENVPREFIX}/bin/python3 ]; then
    display -e "Python3 not exist!!"
    exit
fi

PYTHON=${DEVENVPREFIX}/bin/python3

rm -f site.cfg

if [ $(uname) == Darwin ] ; then
  NPY_BLAS_ORDER=Accelerate
  echo "Darwin"
  cat >> site.cfg << EOF
[accelerate]
libraries = Accelerate, vecLib
EOF
elif [ $(uname) == Linux ] ; then
  BLAS=${BLAS:-mkl}
  if [ ${BLAS} == mkl ] ; then
    NPY_BLAS_ORDER=MKL
  else
    NPY_BLAS_ORDER=openblas
  cat >> site.cfg << EOF
[openblas]
libraries = openblas
library_dirs = ${DEVENVPREFIX}/lib:/usr/local/lib:/usr/lib
include_dirs = ${DEVENVPREFIX}/include/openblas:/usr/local/include/openblas:/usr/include/openblas
runtime_library_dirs = ${DEVENVPREFIX}/lib
EOF
  fi
fi

export NPY_BLAS_ORDER

rm -f setup.cfg
cat >> setup.cfg << EOF
# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.

[versioneer]
VCS = git
style = pep440
versionfile_source = numpy/_version.py
versionfile_build = numpy/_version.py
tag_prefix = v
parentdir_prefix = numpy-
EOF

if [ -z "${NOFORTRAN}" ] ; then
cat >> setup.cfg << EOF

[config_fc]
fcompiler = gfortran
EOF
fi

# buildcmd build.log $PYTHON setup.py build -j $NP
buildcmd build.log ${PYTHON} setup.py build -j ${NP} install \
  --prefix=${DEVENVPREFIX} --old-and-unmanageable

popd > /dev/null

# Check lapack version.
echo "Check lapack version ..."
${PYTHON} -c "import numpy as np ; np.show_config()"

# vim: set et nobomb ft=bash ff=unix fenc=utf8:
